on: [push]

name: test


jobs:
  centos:
    container: centos:7
    runs-on: [self-hosted, Linux, X64]
    env:
      TEST_STRING: "VERY_COOL_STRING"
      TEST_STRING2: "VERY_COOL_STRING2"
      GHA_PREEMPTIBLE: "false"
    steps:
    - run: hostname
    - run: printenv
      env:
        TEST_STRING_RUN: "VERY_COOL_STRING3"
    - run: df -h .
    - run: df -h /mnt/aux
    - run: ls -alh /mnt/aux
    - name: Checkout tools repo
      uses: actions/checkout@v2
      with:
        repository: KittyKatt/screenFetch
        path: screenfetch
    - run: cp screenfetch/screenfetch-dev /usr/bin/screenfetch
    - run: chmod +x screenfetch
    - run: screenfetch
  ubuntu:
    strategy:
      fail-fast: false
      matrix:
        include:
          - {tag: "bionic"}
          - {tag: "focal"}
          - {tag: "impish"}
          - {tag: "hirsute"}
    container: ubuntu:${{ matrix.tag }}
    runs-on: [self-hosted, Linux, X64]
    env:
      TEST_STRING: "VERY_COOL_STRING"
      TEST_STRING2: "VERY_COOL_STRING2"
      MATRIX_PASS: ${{ matrix.tag }}
      DEBIAN_FRONTEND: noninteractive
    steps:
    - name: Setup repository
      uses: actions/checkout@v2
    - run: ./out_err.sh
    - run: hostname
    - run: printenv
      env:
        TEST_STRING_RUN: "VERY_COOL_STRING3"
    - run: df -h .
    - run: df -h /mnt/aux
    - run: ls -alh /mnt/aux
    - run: echo $TEST_STRING2 > test.txt
    - run: echo test
    - run: echo test2
    - run: echo test3
    - run: echo test4
    - run: echo test5
    - run: echo test6
    - run: |
        export TEST_ENV=2
        echo 'GITHUB_ENV_TEST=1' >> $GITHUB_ENV
        echo "ANOTHER_TEST_ENV=$TEST_ENV/test" >> $GITHUB_ENV
        cat $GITHUB_ENV
    - run: |
        echo $GITHUB_ENV_TEST
        echo $ANOTHER_TEST_ENV
        cat $GITHUB_ENV
    - run: ln -s /root/work/test.txt /root/work/test2.txt
    - run: touch /etc/test && ln -s /etc/test /root/work/test3.txt
    - run: ln -s /root/work/test.txt /root/work/text4.txt
    - run: apt -qqy update && apt -qqy install neofetch iproute2 curl gnupg
    - run: ip addr show
    - run: neofetch
    - name: Set color
      id: random-color-generator
      run: echo "SELECTED_COLOR=green" >> $GITHUB_OUTPUT
    - name: Get color
      run: echo "The selected color is ${{ steps.random-color-generator.outputs.SELECTED_COLOR }}"
    - uses: pyTooling/Actions/with-post-step@main
      with:
        main: echo "main"
        post: echo "post"
    - uses: actions/upload-artifact@v2
      with:
        path: |
          **/*.txt
          **/plot_*.svg

  generate-matrix:
    runs-on: [self-hosted, Linux, X64]
    container: ubuntu:bionic
    outputs:
      matrix: ${{ steps.generate-matrix-yosys.outputs.matrix }}
    steps:
      - name: Install dependencies
        run: |
          apt-get update -qq
          apt install -y python3
          update-alternatives --install /usr/bin/python python /usr/bin/python3 1
      - name: Checkout master
        uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 1

      - name: Generate matrix
        id: generate-matrix
        run: |
          matrix="$(python list.py)"
          echo "::set-output name=matrix::$matrix"
          echo "matrix yosys: $matrix"

  tests:
    runs-on: [self-hosted, Linux, X64]
    container: ubuntu:bionic
    needs: [generate-matrix]
    strategy:
      matrix:
        TEST_CASE: ['a', 'b', 'c']
      fail-fast:
        false

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 1
    - run: |
        echo "Done ${{ matrix.TEST_CASE }}"
    - run: |
        exit 1
    - name: Upload load graphs
      uses: actions/upload-artifact@v2
      with:
        name: plots
        path: |
          **/plot_*.svg

